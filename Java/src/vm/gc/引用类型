PhantomReference	虚引用, 不会对生存时间造成任何影响也不能通过虚引用取得对象实例, 被GC时收到一个系统通知
标记清除中，如果一个对象除了这个PhantomReference引用外没有办法达到，把对象加到一个特殊队列中，
允许应用程序采用比finalize方法更为精细的方式对对象的释放做出响应
	^
WeakReference		弱引用, GC必定回收这个对象, 生存周期到下次GC之前
	^
SoftReference		软引用, 在内存充足时阻止对象被GC，生存周期到将要发生内存溢出异常之前
	^
StrongReference		强引用

方法区的回收：
	
	常量回收	没有任何引用到此常量
	
	类回收	满足以下条件的类可以被回收（但不一定会被回收, 但大量使用反射、动态代理、CGLib等场景比较需要类回收）
			1.该类所有实例都被回收
			2.该类的Class类所有实例全部回收, 没有任何地方有通过反射区访问该类
			3.该类的ClassLoader已经被回收